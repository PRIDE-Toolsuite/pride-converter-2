package uk.ac.ebi.pride.tools.converter.report;

import uk.ac.ebi.pride.tools.converter.dao.handler.FastaHandler;
import uk.ac.ebi.pride.tools.converter.report.io.ReportWriter;
import uk.ac.ebi.pride.tools.converter.report.model.Identification;
import uk.ac.ebi.pride.tools.converter.report.model.Sequence;
import uk.ac.ebi.pride.tools.converter.utils.InvalidFormatException;

import java.util.HashMap;
import java.util.Iterator;

/**
 * Created by IntelliJ IDEA.
 * User: rcote
 * Date: 06/07/12
 * Time: 21:03
 * To change this template use File | Settings | File Templates.
 */
public class ReportWriterSingleton {

    public static void generateTestReportFile() throws InvalidFormatException {
        //write report
        ReportWriter writer = new ReportWriter("testReportFileOut.xml");
        writer.setDAO(new ReportTestDAO());
        writer.setFastaHandler(new FastaHandlerTestImpl());
        writer.writeReport();
    }

    private static class FastaHandlerTestImpl implements FastaHandler {

        private HashMap<String, Sequence> seq = new HashMap<String, Sequence>();

        {
            seq.put("P29375", new Sequence("MAGVGPGGYAAEFVPPPECPVFEPSWEEFTDPLSFIGRIRPLAEKTGICKIRPPKDWQPPFACEVKSFRFTPRVQRLNELEAMTRVRLDFLDQLAKFWELQGSTLKIPVVERKILDLYALSKIVASKGGFEMVTKEKKWSKVGSRLGYLPGKGTGSLLKSHYERILYPYELFQSGVSLMGVQMPNLDLKEKVEPEVLSTDTQTSPEPGTRMNILPKRTRRVKTQSESGDVSRNTELKKLQIFGAGPKVVGLAMGTKDKEDEVTRRRKVTNRSDAFNMQMRQRKGTLSVNFVDLYVCMFCGRGNNEDKLLLCDGCDDSYHTFCLIPPLPDVPKGDWRCPKCVAEECSKPREAFGFEQAVREYTLQSFGEMADNFKSDYFNMPVHMVPTELVEKEFWRLVSSIEEDVIVEYGADISSKDFGSGFPVKDGRRKILPEEEEYALSGWNLNNMPVLEQSVLAHINVDISGMKVPWLYVGMCFSSFCWHIEDHWSYSINYLHWGEPKTWYGVPSHAAEQLEEVMRELAPELFESQPDLLHQLVTIMNPNVLMEHGVPVYRTNQCAGEFVVTFPRAYHSGFNQGYNFAEAVNFCTADWLPIGRQCVNHYRRLRRHCVFSHEELIFKMAADPECLDVGLAAMVCKELTLMTEEETRLRESVVQMGVLMSEEEVFELVPDDERQCSACRTTCFLSALTCSCNPERLVCLYHPTDLCPCPMQKKCLRYRYPLEDLPSLLYGVKVRAQSYDTWVSRVTEALSANFNHKKDLIELRVMLEDAEDRKYPENDLFRKLRDAVKEAETCASVAQLLLSKKQKHRQSPDSGRTRTKLTVEELKAFVQQLFSLPCVISQARQVKNLLDDVEEFHERAQEAMMDETPDSSKLQMLIDMGSSLYVELPELPRLKQELQQARWLDEVRLTLSDPQQVTLDVMKKLIDSGVGLAPHHAVEKAMAELQELLTVSERWEEKAKVCLQARPRHSVASLESIVNEAKNIPAFLPNVLSLKEALQKAREWTAKVEAIQSGSNYAYLEQLESLSAKGRPIPVRLEALPQVESQVAAARAWRERTGRTFLKKNSSHTLLQVLSPRTDIGVYGSGKNRRKKVKELIEKEKEKDLDLEPLSDLEEGLEETRDTAMVVAVFKEREQKEIEAMHSLRAANLAKMTMVDRIEEVKFCICRKTASGFMLQCELCKDWFHNSCVPLPKSSSQKKGSSWQAKEVKFLCPLCMRSRRPRLETILSLLVSLQKLPVRLPEGEALQCLTERAMSWQDRARQALATDELSSALAKLSVLSQRMVEQAAREKTEKIISAELQKAAANPDLQGHLPSFQQSAFNRVVSSVSSSPRQTMDYDDEETDSDEDIRETYGYDMKDTASVKSSSSLEPNLFCDEEIPIKSEEVVTHMWTAPSFCAEHAYSSASKSCSQGSSTPRKQPRKSPLVPRSLEPPVLELSPGAKAQLEELMMVGDLLEVSLDETQHIWRILQATHPPSEDRFLHIMEDDSMEEKPLKVKGKDSSEKKRKRKLEKVEQLFGEGKQKSKELKKMDKPRKKKLKLGADKSKELNKLAKKLAKEEERKKKKEKAAAAKVELVKESTEKKREKKVLDIPSKYDWSGAEESDDENAVCAAQNCQRPCKDKVDWVQCDGGCDEWFHQVCVGVSPEMAENEDYICINCAKKQGPVSPGPAPPPSFIMSYKLPMEDLKETS", 1, "P29375"));
            seq.put("Q0P9X8", new Sequence("MVFRKSLLKLAVFALGACVAFSNANAAEGKLESIKSKGQLIVGVKNDVPHYALLDQATGEIKGFEVDVAKLLAKSILGDDKKIKLVAVNAKTRGPLLDNGSVDAVIATFTITPERKRIYNFSEPYYQDAIGLLVLKEKKYKSLADMKGANIGVAQAATTKKAIGEAAKKIGIDVKFSEFPDYPSIKAALDAKRVDAFSVDKSILLGYVDDKSEILPDSFEPQSYGIVTKKDDPAFAKYVDDFVKEHKNEIDALAKKWGL", 2, "Q0P9X8"));
            seq.put("A1VZQ4", new Sequence("MVFRKSLLKLAVFALGACVAFSNANAAEGKLESIKSKGQLIVGVKNDVPHYALLDQATGEIKGFEVDVAKLLAKSILGDDKKIKLVAVNAKTRGPLLDNGSVDAVIATFTITPERKRIYNFSEPYYQDAIGLLVLKEKNYKSLADMKGANIGVAQAATTKKAIGEAAKKIGIDVKFSEFPDYPSIKAALDAKRVDAFSVDKSILLGYVDDKSEILPDSFEPQSYGIVTKKDDPAFAKYVDDFVKEHKNEIDALAKKWGL", 3, "A1VZQ4"));
        }

        public Identification updateFastaSequenceInformation(Identification identification) {
            Sequence s = seq.get(identification.getAccession());
            if (s == null) {
                throw new IllegalStateException("No sequence found for identification accession " + s);
            }
            identification.setFastaSequenceReference(s.getId());
            return identification;
        }

        public Iterator<Sequence> getIterator(boolean onlyIdentified) {
            return seq.values().iterator();
        }

    }

}
